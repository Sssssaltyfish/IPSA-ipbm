Terminals unused in grammar

   T_EOF
   VALUE_STRING


Grammar

    0 $accept: start $end

    1 start: header_defs struct_defs parser_def actions_def tables_def pipeline pipeline
    2      | header_del adds rebuilds

    3 header_del: header_defs struct_defs parser_def dels

    4 dels: %empty
    5     | dels del

    6 del: DEL STAGE IDENTIFIER
    7    | DEL TABLE IDENTIFIER IN STAGE IDENTIFIER
    8    | DEL ACTION IDENTIFIER IN STAGE IDENTIFIER
    9    | DEL ENTRIES IN TABLE IDENTIFIER IN STAGE IDENTIFIER
   10    | DEL PARSER IDENTIFIER IN STAGE IDENTIFIER
   11    | DEL MATCHER IN STAGE IDENTIFIER key_def

   12 rebuilds: %empty
   13         | rebuilds rebuild

   14 rebuild: REBUILD DEFAULT_ACTION IDENTIFIER IN TABLE IDENTIFIER IN STAGE IDENTIFIER
   15        | REBUILD EXPRESSION IN ACTION IDENTIFIER IN STAGE IDENTIFIER expressions
   16        | REBUILD OPERATION IN STAGE IDENTIFIER operations
   17        | REBUILD ACTION_TO_STAGE IDENTIFIER IN STAGE IDENTIFIER NEXT_STAGE IDENTIFIER

   18 adds: %empty
   19     | adds add

   20 add: ADD STAGE stage_def
   21    | ADD TABLE table_def
   22    | ADD ACTION action_def
   23    | ADD ENTRIES IN TABLE IDENTIFIER IN STAGE IDENTIFIER table_optional_stmt
   24    | ADD PARSER IDENTIFIER IN STAGE IDENTIFIER
   25    | ADD MATCHER IN STAGE IDENTIFIER switch_entries
   26    | ADD EXECUTOR IN STAGE IDENTIFIER stage_executor_entries

   27 header_defs: %empty
   28            | header_defs header_def

   29 header_def: HEADER IDENTIFIER '{' field_defs '}'

   30 field_defs: %empty
   31           | field_defs field_def ';'

   32 field_def: type_def IDENTIFIER

   33 type_def: BIT '<' VALUE_INT '>'
   34         | IDENTIFIER

   35 struct_defs: %empty
   36            | struct_defs struct_def

   37 struct_def: STRUCT IDENTIFIER '{' field_defs '}' IDENTIFIER ';'
   38           | STRUCT HEADERS '{' field_defs '}' IDENTIFIER ';'

   39 parser_def: %empty
   40           | PARSER IDENTIFIER '(' PACKET_IN PACKET ')' '{' state_defs '}'

   41 state_defs: %empty
   42           | state_defs state_def

   43 state_def: STATE IDENTIFIER '{' extract_stmt transition_stmt '}'

   44 extract_stmt: PACKET '.' EXTRACT '(' member ')' ';'

   45 member: IDENTIFIER '.' IDENTIFIER

   46 transition_stmt: TRANSITION SELECT '(' fields ')' '{' transition_entries '}'
   47                | TRANSITION direct_entry ';'

   48 fields: %empty
   49       | field
   50       | fields ',' field

   51 direct_entry: IDENTIFIER
   52             | ACCEPT

   53 field: IDENTIFIER '.' IDENTIFIER '.' IDENTIFIER
   54      | IDENTIFIER '.' IDENTIFIER '.' IS_VALID '(' ')'

   55 transition_entries: %empty
   56                   | transition_entries transition_entry

   57 transition_entry: key_def ':' IDENTIFIER ';'
   58                 | key_def ':' ACCEPT ';'

   59 key_def: VALUE_INT
   60        | TRUE
   61        | FALSE
   62        | VALUE_INT ANDANDAND VALUE_INT
   63        | VALUE_INT DIVDIVDIV VALUE_INT
   64        | DEFAULT
   65        | '*'

   66 actions_def: ACTIONS '{' action_defs '}'

   67 action_defs: %empty
   68            | action_defs action_def

   69 action_def: ACTION IDENTIFIER '(' parameters ')' '{' expressions '}'
   70           | ACTION NOACTION '(' ')' '{' '}'

   71 parameters: %empty
   72           | field_def
   73           | parameters ',' field_def

   74 expressions: %empty
   75            | expressions expression

   76 expression: lvalue '=' operation ';'

   77 lvalue: member
   78       | field

   79 operation: operand
   80          | '(' operation op operation ')'

   81 op: '+'
   82   | '-'
   83   | '*'
   84   | '/'
   85   | '&'
   86   | '|'
   87   | '^'
   88   | '~'
   89   | '!'
   90   | EQU
   91   | NEQ
   92   | '<'
   93   | '>'
   94   | LEQ
   95   | GEQ

   96 operand: lvalue
   97        | VALUE_INT
   98        | IDENTIFIER
   99        | TRUE
  100        | FALSE

  101 tables_def: TABLES '{' table_defs '}'

  102 table_defs: %empty
  103           | table_defs table_def

  104 table_def: TABLE IDENTIFIER '{' table_key_def table_optional_stmts '}'

  105 table_key_def: KEY '=' '{' key_entries '}'

  106 key_entries: %empty
  107            | key_entries key_entry

  108 key_entry: lvalue ':' match_type ';'

  109 match_type: EXACT
  110           | TERNARY
  111           | LPM

  112 table_optional_stmts: %empty
  113                     | table_optional_stmts table_optional_stmt

  114 table_optional_stmt: SIZE '=' VALUE_INT ';'
  115                    | ENTRIES '=' '{' match_entries '}'
  116                    | DEFAULT_ACTION '=' IDENTIFIER ';'
  117                    | DEFAULT_ACTION '=' NOACTION ';'
  118                    | VALUE_WIDTH '=' VALUE_INT ';'

  119 match_entries: %empty
  120              | match_entries match_entry

  121 match_entry: match_key ':' IDENTIFIER ';'
  122            | match_key ':' NOACTION ';'

  123 match_key: '(' key_defs ')'

  124 key_defs: %empty
  125         | key_def
  126         | key_defs ',' key_def

  127 pipeline: CONTROL IDENTIFIER '{' stage_defs '}'

  128 stage_defs: %empty
  129           | stage_defs stage_def

  130 stage_def: STAGE IDENTIFIER '{' stage_parser stage_matcher stage_executor '}'

  131 stage_parser: PARSER '{' stage_parser_headers '}' ';'

  132 stage_parser_headers: %empty
  133                     | stage_parser_headers stage_parser_header

  134 stage_parser_header: IDENTIFIER ';'

  135 stage_matcher: MATCHER '{' SWITCH '(' operations ')' '{' switch_entries '}' '}' ';'

  136 operations: %empty
  137           | operation
  138           | operations ',' operation

  139 switch_entries: %empty
  140               | switch_entries switch_entry

  141 switch_entry: key_def ':' switch_value ';'

  142 switch_value: TABLE '(' IDENTIFIER ')'
  143             | STAGE '(' IDENTIFIER ')'
  144             | ACTION '(' IDENTIFIER ')'
  145             | ACTION '(' NOACTION ')'
  146             | NONE

  147 stage_executor: EXECUTOR '{' stage_executor_entries '}' ';'

  148 stage_executor_entries: %empty
  149                       | stage_executor_entries stage_executor_entry

  150 stage_executor_entry: stage_executor_entry_left ':' stage_name ';'

  151 stage_executor_entry_left: IDENTIFIER
  152                          | HIT
  153                          | MISS
  154                          | NOACTION

  155 stage_name: IDENTIFIER
  156           | NONE


Terminals, with rules where they appear

$end (0) 0
'!' (33) 89
'&' (38) 85
'(' (40) 40 44 46 54 69 70 80 123 135 142 143 144 145
')' (41) 40 44 46 54 69 70 80 123 135 142 143 144 145
'*' (42) 65 83
'+' (43) 81
',' (44) 50 73 126 138
'-' (45) 82
'.' (46) 44 45 53 54
'/' (47) 84
':' (58) 57 58 108 121 122 141 150
';' (59) 31 37 38 44 47 57 58 76 108 114 116 117 118 121 122 131 134
    135 141 147 150
'<' (60) 33 92
'=' (61) 76 105 114 115 116 117 118
'>' (62) 33 93
'^' (94) 87
'{' (123) 29 37 38 40 43 46 66 69 70 101 104 105 115 127 130 131 135
    147
'|' (124) 86
'}' (125) 29 37 38 40 43 46 66 69 70 101 104 105 115 127 130 131 135
    147
'~' (126) 88
error (256)
BIT (258) 33
STRUCT (259) 37 38
TRUE (260) 60 99
FALSE (261) 61 100
HEADER (262) 29
HEADERS (263) 38
PARSER (264) 10 24 40 131
STATE (265) 43
TRANSITION (266) 46 47
PACKET (267) 40 44
PACKET_IN (268) 40
DEFAULT (269) 64
ACCEPT (270) 52 58
EXTRACT (271) 44
SELECT (272) 46
ACTIONS (273) 66
ACTION (274) 8 15 22 69 70 144 145
NOACTION (275) 70 117 122 145 154
TABLES (276) 101
TABLE (277) 7 9 14 21 23 104 142
KEY (278) 105
SIZE (279) 114
DEFAULT_ACTION (280) 14 116 117
ENTRIES (281) 9 23 115
EXACT (282) 109
TERNARY (283) 110
LPM (284) 111
STAGE (285) 6 7 8 9 10 11 14 15 16 17 20 23 24 25 26 130 143
CONTROL (286) 127
MATCHER (287) 11 25 135
EXECUTOR (288) 26 147
SWITCH (289) 135
HIT (290) 152
MISS (291) 153
NONE (292) 146 156
IS_VALID (293) 54
VALUE_WIDTH (294) 118
EQU (295) 90
NEQ (296) 91
LEQ (297) 94
GEQ (298) 95
T_EOF (299)
ANDANDAND (300) 62
DIVDIVDIV (301) 63
IDENTIFIER (302) 6 7 8 9 10 11 14 15 16 17 23 24 25 26 29 32 34 37
    38 40 43 45 51 53 54 57 69 98 104 116 121 127 130 134 142 143 144
    151 155
VALUE_STRING (303)
VALUE_INT (304) 33 59 62 63 97 114 118
ADD (305) 20 21 22 23 24 25 26
DEL (306) 6 7 8 9 10 11
REBUILD (307) 14 15 16 17
IN (308) 7 8 9 10 11 14 15 16 17 23 24 25 26
EXPRESSION (309) 15
OPERATION (310) 16
ACTION_TO_STAGE (311) 17
NEXT_STAGE (312) 17


Nonterminals, with rules where they appear

$accept (78)
    on left: 0
start (79)
    on left: 1 2, on right: 0
header_del (80)
    on left: 3, on right: 2
dels (81)
    on left: 4 5, on right: 3 5
del (82)
    on left: 6 7 8 9 10 11, on right: 5
rebuilds (83)
    on left: 12 13, on right: 2 13
rebuild (84)
    on left: 14 15 16 17, on right: 13
adds (85)
    on left: 18 19, on right: 2 19
add (86)
    on left: 20 21 22 23 24 25 26, on right: 19
header_defs (87)
    on left: 27 28, on right: 1 3 28
header_def (88)
    on left: 29, on right: 28
field_defs (89)
    on left: 30 31, on right: 29 31 37 38
field_def (90)
    on left: 32, on right: 31 72 73
type_def (91)
    on left: 33 34, on right: 32
struct_defs (92)
    on left: 35 36, on right: 1 3 36
struct_def (93)
    on left: 37 38, on right: 36
parser_def (94)
    on left: 39 40, on right: 1 3
state_defs (95)
    on left: 41 42, on right: 40 42
state_def (96)
    on left: 43, on right: 42
extract_stmt (97)
    on left: 44, on right: 43
member (98)
    on left: 45, on right: 44 77
transition_stmt (99)
    on left: 46 47, on right: 43
fields (100)
    on left: 48 49 50, on right: 46 50
direct_entry (101)
    on left: 51 52, on right: 47
field (102)
    on left: 53 54, on right: 49 50 78
transition_entries (103)
    on left: 55 56, on right: 46 56
transition_entry (104)
    on left: 57 58, on right: 56
key_def (105)
    on left: 59 60 61 62 63 64 65, on right: 11 57 58 125 126 141
actions_def (106)
    on left: 66, on right: 1
action_defs (107)
    on left: 67 68, on right: 66 68
action_def (108)
    on left: 69 70, on right: 22 68
parameters (109)
    on left: 71 72 73, on right: 69 73
expressions (110)
    on left: 74 75, on right: 15 69 75
expression (111)
    on left: 76, on right: 75
lvalue (112)
    on left: 77 78, on right: 76 96 108
operation (113)
    on left: 79 80, on right: 76 80 137 138
op (114)
    on left: 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95, on right:
    80
operand (115)
    on left: 96 97 98 99 100, on right: 79
tables_def (116)
    on left: 101, on right: 1
table_defs (117)
    on left: 102 103, on right: 101 103
table_def (118)
    on left: 104, on right: 21 103
table_key_def (119)
    on left: 105, on right: 104
key_entries (120)
    on left: 106 107, on right: 105 107
key_entry (121)
    on left: 108, on right: 107
match_type (122)
    on left: 109 110 111, on right: 108
table_optional_stmts (123)
    on left: 112 113, on right: 104 113
table_optional_stmt (124)
    on left: 114 115 116 117 118, on right: 23 113
match_entries (125)
    on left: 119 120, on right: 115 120
match_entry (126)
    on left: 121 122, on right: 120
match_key (127)
    on left: 123, on right: 121 122
key_defs (128)
    on left: 124 125 126, on right: 123 126
pipeline (129)
    on left: 127, on right: 1
stage_defs (130)
    on left: 128 129, on right: 127 129
stage_def (131)
    on left: 130, on right: 20 129
stage_parser (132)
    on left: 131, on right: 130
stage_parser_headers (133)
    on left: 132 133, on right: 131 133
stage_parser_header (134)
    on left: 134, on right: 133
stage_matcher (135)
    on left: 135, on right: 130
operations (136)
    on left: 136 137 138, on right: 16 135 138
switch_entries (137)
    on left: 139 140, on right: 25 135 140
switch_entry (138)
    on left: 141, on right: 140
switch_value (139)
    on left: 142 143 144 145 146, on right: 141
stage_executor (140)
    on left: 147, on right: 130
stage_executor_entries (141)
    on left: 148 149, on right: 26 147 149
stage_executor_entry (142)
    on left: 150, on right: 149
stage_executor_entry_left (143)
    on left: 151 152 153 154, on right: 150
stage_name (144)
    on left: 155 156, on right: 150


State 0

    0 $accept: . start $end

    $default  reduce using rule 27 (header_defs)

    start        go to state 1
    header_del   go to state 2
    header_defs  go to state 3


State 1

    0 $accept: start . $end

    $end  shift, and go to state 4


State 2

    2 start: header_del . adds rebuilds

    $default  reduce using rule 18 (adds)

    adds  go to state 5


State 3

    1 start: header_defs . struct_defs parser_def actions_def tables_def pipeline pipeline
    3 header_del: header_defs . struct_defs parser_def dels
   28 header_defs: header_defs . header_def

    HEADER  shift, and go to state 6

    $default  reduce using rule 35 (struct_defs)

    header_def   go to state 7
    struct_defs  go to state 8


State 4

    0 $accept: start $end .

    $default  accept


State 5

    2 start: header_del adds . rebuilds
   19 adds: adds . add

    ADD  shift, and go to state 9

    $default  reduce using rule 12 (rebuilds)

    rebuilds  go to state 10
    add       go to state 11


State 6

   29 header_def: HEADER . IDENTIFIER '{' field_defs '}'

    IDENTIFIER  shift, and go to state 12


State 7

   28 header_defs: header_defs header_def .

    $default  reduce using rule 28 (header_defs)


State 8

    1 start: header_defs struct_defs . parser_def actions_def tables_def pipeline pipeline
    3 header_del: header_defs struct_defs . parser_def dels
   36 struct_defs: struct_defs . struct_def

    STRUCT  shift, and go to state 13
    PARSER  shift, and go to state 14

    $default  reduce using rule 39 (parser_def)

    struct_def  go to state 15
    parser_def  go to state 16


State 9

   20 add: ADD . STAGE stage_def
   21    | ADD . TABLE table_def
   22    | ADD . ACTION action_def
   23    | ADD . ENTRIES IN TABLE IDENTIFIER IN STAGE IDENTIFIER table_optional_stmt
   24    | ADD . PARSER IDENTIFIER IN STAGE IDENTIFIER
   25    | ADD . MATCHER IN STAGE IDENTIFIER switch_entries
   26    | ADD . EXECUTOR IN STAGE IDENTIFIER stage_executor_entries

    PARSER    shift, and go to state 17
    ACTION    shift, and go to state 18
    TABLE     shift, and go to state 19
    ENTRIES   shift, and go to state 20
    STAGE     shift, and go to state 21
    MATCHER   shift, and go to state 22
    EXECUTOR  shift, and go to state 23


State 10

    2 start: header_del adds rebuilds .
   13 rebuilds: rebuilds . rebuild

    REBUILD  shift, and go to state 24

    $default  reduce using rule 2 (start)

    rebuild  go to state 25


State 11

   19 adds: adds add .

    $default  reduce using rule 19 (adds)


State 12

   29 header_def: HEADER IDENTIFIER . '{' field_defs '}'

    '{'  shift, and go to state 26


State 13

   37 struct_def: STRUCT . IDENTIFIER '{' field_defs '}' IDENTIFIER ';'
   38           | STRUCT . HEADERS '{' field_defs '}' IDENTIFIER ';'

    HEADERS     shift, and go to state 27
    IDENTIFIER  shift, and go to state 28


State 14

   40 parser_def: PARSER . IDENTIFIER '(' PACKET_IN PACKET ')' '{' state_defs '}'

    IDENTIFIER  shift, and go to state 29


State 15

   36 struct_defs: struct_defs struct_def .

    $default  reduce using rule 36 (struct_defs)


State 16

    1 start: header_defs struct_defs parser_def . actions_def tables_def pipeline pipeline
    3 header_del: header_defs struct_defs parser_def . dels

    ACTIONS  shift, and go to state 30

    $default  reduce using rule 4 (dels)

    dels         go to state 31
    actions_def  go to state 32


State 17

   24 add: ADD PARSER . IDENTIFIER IN STAGE IDENTIFIER

    IDENTIFIER  shift, and go to state 33


State 18

   22 add: ADD ACTION . action_def

    ACTION  shift, and go to state 34

    action_def  go to state 35


State 19

   21 add: ADD TABLE . table_def

    TABLE  shift, and go to state 36

    table_def  go to state 37


State 20

   23 add: ADD ENTRIES . IN TABLE IDENTIFIER IN STAGE IDENTIFIER table_optional_stmt

    IN  shift, and go to state 38


State 21

   20 add: ADD STAGE . stage_def

    STAGE  shift, and go to state 39

    stage_def  go to state 40


State 22

   25 add: ADD MATCHER . IN STAGE IDENTIFIER switch_entries

    IN  shift, and go to state 41


State 23

   26 add: ADD EXECUTOR . IN STAGE IDENTIFIER stage_executor_entries

    IN  shift, and go to state 42


State 24

   14 rebuild: REBUILD . DEFAULT_ACTION IDENTIFIER IN TABLE IDENTIFIER IN STAGE IDENTIFIER
   15        | REBUILD . EXPRESSION IN ACTION IDENTIFIER IN STAGE IDENTIFIER expressions
   16        | REBUILD . OPERATION IN STAGE IDENTIFIER operations
   17        | REBUILD . ACTION_TO_STAGE IDENTIFIER IN STAGE IDENTIFIER NEXT_STAGE IDENTIFIER

    DEFAULT_ACTION   shift, and go to state 43
    EXPRESSION       shift, and go to state 44
    OPERATION        shift, and go to state 45
    ACTION_TO_STAGE  shift, and go to state 46


State 25

   13 rebuilds: rebuilds rebuild .

    $default  reduce using rule 13 (rebuilds)


State 26

   29 header_def: HEADER IDENTIFIER '{' . field_defs '}'

    $default  reduce using rule 30 (field_defs)

    field_defs  go to state 47


State 27

   38 struct_def: STRUCT HEADERS . '{' field_defs '}' IDENTIFIER ';'

    '{'  shift, and go to state 48


State 28

   37 struct_def: STRUCT IDENTIFIER . '{' field_defs '}' IDENTIFIER ';'

    '{'  shift, and go to state 49


State 29

   40 parser_def: PARSER IDENTIFIER . '(' PACKET_IN PACKET ')' '{' state_defs '}'

    '('  shift, and go to state 50


State 30

   66 actions_def: ACTIONS . '{' action_defs '}'

    '{'  shift, and go to state 51


State 31

    3 header_del: header_defs struct_defs parser_def dels .
    5 dels: dels . del

    DEL  shift, and go to state 52

    $default  reduce using rule 3 (header_del)

    del  go to state 53


State 32

    1 start: header_defs struct_defs parser_def actions_def . tables_def pipeline pipeline

    TABLES  shift, and go to state 54

    tables_def  go to state 55


State 33

   24 add: ADD PARSER IDENTIFIER . IN STAGE IDENTIFIER

    IN  shift, and go to state 56


State 34

   69 action_def: ACTION . IDENTIFIER '(' parameters ')' '{' expressions '}'
   70           | ACTION . NOACTION '(' ')' '{' '}'

    NOACTION    shift, and go to state 57
    IDENTIFIER  shift, and go to state 58


State 35

   22 add: ADD ACTION action_def .

    $default  reduce using rule 22 (add)


State 36

  104 table_def: TABLE . IDENTIFIER '{' table_key_def table_optional_stmts '}'

    IDENTIFIER  shift, and go to state 59


State 37

   21 add: ADD TABLE table_def .

    $default  reduce using rule 21 (add)


State 38

   23 add: ADD ENTRIES IN . TABLE IDENTIFIER IN STAGE IDENTIFIER table_optional_stmt

    TABLE  shift, and go to state 60


State 39

  130 stage_def: STAGE . IDENTIFIER '{' stage_parser stage_matcher stage_executor '}'

    IDENTIFIER  shift, and go to state 61


State 40

   20 add: ADD STAGE stage_def .

    $default  reduce using rule 20 (add)


State 41

   25 add: ADD MATCHER IN . STAGE IDENTIFIER switch_entries

    STAGE  shift, and go to state 62


State 42

   26 add: ADD EXECUTOR IN . STAGE IDENTIFIER stage_executor_entries

    STAGE  shift, and go to state 63


State 43

   14 rebuild: REBUILD DEFAULT_ACTION . IDENTIFIER IN TABLE IDENTIFIER IN STAGE IDENTIFIER

    IDENTIFIER  shift, and go to state 64


State 44

   15 rebuild: REBUILD EXPRESSION . IN ACTION IDENTIFIER IN STAGE IDENTIFIER expressions

    IN  shift, and go to state 65


State 45

   16 rebuild: REBUILD OPERATION . IN STAGE IDENTIFIER operations

    IN  shift, and go to state 66


State 46

   17 rebuild: REBUILD ACTION_TO_STAGE . IDENTIFIER IN STAGE IDENTIFIER NEXT_STAGE IDENTIFIER

    IDENTIFIER  shift, and go to state 67


State 47

   29 header_def: HEADER IDENTIFIER '{' field_defs . '}'
   31 field_defs: field_defs . field_def ';'

    BIT         shift, and go to state 68
    IDENTIFIER  shift, and go to state 69
    '}'         shift, and go to state 70

    field_def  go to state 71
    type_def   go to state 72


State 48

   38 struct_def: STRUCT HEADERS '{' . field_defs '}' IDENTIFIER ';'

    $default  reduce using rule 30 (field_defs)

    field_defs  go to state 73


State 49

   37 struct_def: STRUCT IDENTIFIER '{' . field_defs '}' IDENTIFIER ';'

    $default  reduce using rule 30 (field_defs)

    field_defs  go to state 74


State 50

   40 parser_def: PARSER IDENTIFIER '(' . PACKET_IN PACKET ')' '{' state_defs '}'

    PACKET_IN  shift, and go to state 75


State 51

   66 actions_def: ACTIONS '{' . action_defs '}'

    $default  reduce using rule 67 (action_defs)

    action_defs  go to state 76


State 52

    6 del: DEL . STAGE IDENTIFIER
    7    | DEL . TABLE IDENTIFIER IN STAGE IDENTIFIER
    8    | DEL . ACTION IDENTIFIER IN STAGE IDENTIFIER
    9    | DEL . ENTRIES IN TABLE IDENTIFIER IN STAGE IDENTIFIER
   10    | DEL . PARSER IDENTIFIER IN STAGE IDENTIFIER
   11    | DEL . MATCHER IN STAGE IDENTIFIER key_def

    PARSER   shift, and go to state 77
    ACTION   shift, and go to state 78
    TABLE    shift, and go to state 79
    ENTRIES  shift, and go to state 80
    STAGE    shift, and go to state 81
    MATCHER  shift, and go to state 82


State 53

    5 dels: dels del .

    $default  reduce using rule 5 (dels)


State 54

  101 tables_def: TABLES . '{' table_defs '}'

    '{'  shift, and go to state 83


State 55

    1 start: header_defs struct_defs parser_def actions_def tables_def . pipeline pipeline

    CONTROL  shift, and go to state 84

    pipeline  go to state 85


State 56

   24 add: ADD PARSER IDENTIFIER IN . STAGE IDENTIFIER

    STAGE  shift, and go to state 86


State 57

   70 action_def: ACTION NOACTION . '(' ')' '{' '}'

    '('  shift, and go to state 87


State 58

   69 action_def: ACTION IDENTIFIER . '(' parameters ')' '{' expressions '}'

    '('  shift, and go to state 88


State 59

  104 table_def: TABLE IDENTIFIER . '{' table_key_def table_optional_stmts '}'

    '{'  shift, and go to state 89


State 60

   23 add: ADD ENTRIES IN TABLE . IDENTIFIER IN STAGE IDENTIFIER table_optional_stmt

    IDENTIFIER  shift, and go to state 90


State 61

  130 stage_def: STAGE IDENTIFIER . '{' stage_parser stage_matcher stage_executor '}'

    '{'  shift, and go to state 91


State 62

   25 add: ADD MATCHER IN STAGE . IDENTIFIER switch_entries

    IDENTIFIER  shift, and go to state 92


State 63

   26 add: ADD EXECUTOR IN STAGE . IDENTIFIER stage_executor_entries

    IDENTIFIER  shift, and go to state 93


State 64

   14 rebuild: REBUILD DEFAULT_ACTION IDENTIFIER . IN TABLE IDENTIFIER IN STAGE IDENTIFIER

    IN  shift, and go to state 94


State 65

   15 rebuild: REBUILD EXPRESSION IN . ACTION IDENTIFIER IN STAGE IDENTIFIER expressions

    ACTION  shift, and go to state 95


State 66

   16 rebuild: REBUILD OPERATION IN . STAGE IDENTIFIER operations

    STAGE  shift, and go to state 96


State 67

   17 rebuild: REBUILD ACTION_TO_STAGE IDENTIFIER . IN STAGE IDENTIFIER NEXT_STAGE IDENTIFIER

    IN  shift, and go to state 97


State 68

   33 type_def: BIT . '<' VALUE_INT '>'

    '<'  shift, and go to state 98


State 69

   34 type_def: IDENTIFIER .

    $default  reduce using rule 34 (type_def)


State 70

   29 header_def: HEADER IDENTIFIER '{' field_defs '}' .

    $default  reduce using rule 29 (header_def)


State 71

   31 field_defs: field_defs field_def . ';'

    ';'  shift, and go to state 99


State 72

   32 field_def: type_def . IDENTIFIER

    IDENTIFIER  shift, and go to state 100


State 73

   31 field_defs: field_defs . field_def ';'
   38 struct_def: STRUCT HEADERS '{' field_defs . '}' IDENTIFIER ';'

    BIT         shift, and go to state 68
    IDENTIFIER  shift, and go to state 69
    '}'         shift, and go to state 101

    field_def  go to state 71
    type_def   go to state 72


State 74

   31 field_defs: field_defs . field_def ';'
   37 struct_def: STRUCT IDENTIFIER '{' field_defs . '}' IDENTIFIER ';'

    BIT         shift, and go to state 68
    IDENTIFIER  shift, and go to state 69
    '}'         shift, and go to state 102

    field_def  go to state 71
    type_def   go to state 72


State 75

   40 parser_def: PARSER IDENTIFIER '(' PACKET_IN . PACKET ')' '{' state_defs '}'

    PACKET  shift, and go to state 103


State 76

   66 actions_def: ACTIONS '{' action_defs . '}'
   68 action_defs: action_defs . action_def

    ACTION  shift, and go to state 34
    '}'     shift, and go to state 104

    action_def  go to state 105


State 77

   10 del: DEL PARSER . IDENTIFIER IN STAGE IDENTIFIER

    IDENTIFIER  shift, and go to state 106


State 78

    8 del: DEL ACTION . IDENTIFIER IN STAGE IDENTIFIER

    IDENTIFIER  shift, and go to state 107


State 79

    7 del: DEL TABLE . IDENTIFIER IN STAGE IDENTIFIER

    IDENTIFIER  shift, and go to state 108


State 80

    9 del: DEL ENTRIES . IN TABLE IDENTIFIER IN STAGE IDENTIFIER

    IN  shift, and go to state 109


State 81

    6 del: DEL STAGE . IDENTIFIER

    IDENTIFIER  shift, and go to state 110


State 82

   11 del: DEL MATCHER . IN STAGE IDENTIFIER key_def

    IN  shift, and go to state 111


State 83

  101 tables_def: TABLES '{' . table_defs '}'

    $default  reduce using rule 102 (table_defs)

    table_defs  go to state 112


State 84

  127 pipeline: CONTROL . IDENTIFIER '{' stage_defs '}'

    IDENTIFIER  shift, and go to state 113


State 85

    1 start: header_defs struct_defs parser_def actions_def tables_def pipeline . pipeline

    CONTROL  shift, and go to state 84

    pipeline  go to state 114


State 86

   24 add: ADD PARSER IDENTIFIER IN STAGE . IDENTIFIER

    IDENTIFIER  shift, and go to state 115


State 87

   70 action_def: ACTION NOACTION '(' . ')' '{' '}'

    ')'  shift, and go to state 116


State 88

   69 action_def: ACTION IDENTIFIER '(' . parameters ')' '{' expressions '}'

    BIT         shift, and go to state 68
    IDENTIFIER  shift, and go to state 69

    $default  reduce using rule 71 (parameters)

    field_def   go to state 117
    type_def    go to state 72
    parameters  go to state 118


State 89

  104 table_def: TABLE IDENTIFIER '{' . table_key_def table_optional_stmts '}'

    KEY  shift, and go to state 119

    table_key_def  go to state 120


State 90

   23 add: ADD ENTRIES IN TABLE IDENTIFIER . IN STAGE IDENTIFIER table_optional_stmt

    IN  shift, and go to state 121


State 91

  130 stage_def: STAGE IDENTIFIER '{' . stage_parser stage_matcher stage_executor '}'

    PARSER  shift, and go to state 122

    stage_parser  go to state 123


State 92

   25 add: ADD MATCHER IN STAGE IDENTIFIER . switch_entries

    $default  reduce using rule 139 (switch_entries)

    switch_entries  go to state 124


State 93

   26 add: ADD EXECUTOR IN STAGE IDENTIFIER . stage_executor_entries

    $default  reduce using rule 148 (stage_executor_entries)

    stage_executor_entries  go to state 125


State 94

   14 rebuild: REBUILD DEFAULT_ACTION IDENTIFIER IN . TABLE IDENTIFIER IN STAGE IDENTIFIER

    TABLE  shift, and go to state 126


State 95

   15 rebuild: REBUILD EXPRESSION IN ACTION . IDENTIFIER IN STAGE IDENTIFIER expressions

    IDENTIFIER  shift, and go to state 127


State 96

   16 rebuild: REBUILD OPERATION IN STAGE . IDENTIFIER operations

    IDENTIFIER  shift, and go to state 128


State 97

   17 rebuild: REBUILD ACTION_TO_STAGE IDENTIFIER IN . STAGE IDENTIFIER NEXT_STAGE IDENTIFIER

    STAGE  shift, and go to state 129


State 98

   33 type_def: BIT '<' . VALUE_INT '>'

    VALUE_INT  shift, and go to state 130


State 99

   31 field_defs: field_defs field_def ';' .

    $default  reduce using rule 31 (field_defs)


State 100

   32 field_def: type_def IDENTIFIER .

    $default  reduce using rule 32 (field_def)


State 101

   38 struct_def: STRUCT HEADERS '{' field_defs '}' . IDENTIFIER ';'

    IDENTIFIER  shift, and go to state 131


State 102

   37 struct_def: STRUCT IDENTIFIER '{' field_defs '}' . IDENTIFIER ';'

    IDENTIFIER  shift, and go to state 132


State 103

   40 parser_def: PARSER IDENTIFIER '(' PACKET_IN PACKET . ')' '{' state_defs '}'

    ')'  shift, and go to state 133


State 104

   66 actions_def: ACTIONS '{' action_defs '}' .

    $default  reduce using rule 66 (actions_def)


State 105

   68 action_defs: action_defs action_def .

    $default  reduce using rule 68 (action_defs)


State 106

   10 del: DEL PARSER IDENTIFIER . IN STAGE IDENTIFIER

    IN  shift, and go to state 134


State 107

    8 del: DEL ACTION IDENTIFIER . IN STAGE IDENTIFIER

    IN  shift, and go to state 135


State 108

    7 del: DEL TABLE IDENTIFIER . IN STAGE IDENTIFIER

    IN  shift, and go to state 136


State 109

    9 del: DEL ENTRIES IN . TABLE IDENTIFIER IN STAGE IDENTIFIER

    TABLE  shift, and go to state 137


State 110

    6 del: DEL STAGE IDENTIFIER .

    $default  reduce using rule 6 (del)


State 111

   11 del: DEL MATCHER IN . STAGE IDENTIFIER key_def

    STAGE  shift, and go to state 138


State 112

  101 tables_def: TABLES '{' table_defs . '}'
  103 table_defs: table_defs . table_def

    TABLE  shift, and go to state 36
    '}'    shift, and go to state 139

    table_def  go to state 140


State 113

  127 pipeline: CONTROL IDENTIFIER . '{' stage_defs '}'

    '{'  shift, and go to state 141


State 114

    1 start: header_defs struct_defs parser_def actions_def tables_def pipeline pipeline .

    $default  reduce using rule 1 (start)


State 115

   24 add: ADD PARSER IDENTIFIER IN STAGE IDENTIFIER .

    $default  reduce using rule 24 (add)


State 116

   70 action_def: ACTION NOACTION '(' ')' . '{' '}'

    '{'  shift, and go to state 142


State 117

   72 parameters: field_def .

    $default  reduce using rule 72 (parameters)


State 118

   69 action_def: ACTION IDENTIFIER '(' parameters . ')' '{' expressions '}'
   73 parameters: parameters . ',' field_def

    ')'  shift, and go to state 143
    ','  shift, and go to state 144


State 119

  105 table_key_def: KEY . '=' '{' key_entries '}'

    '='  shift, and go to state 145


State 120

  104 table_def: TABLE IDENTIFIER '{' table_key_def . table_optional_stmts '}'

    $default  reduce using rule 112 (table_optional_stmts)

    table_optional_stmts  go to state 146


State 121

   23 add: ADD ENTRIES IN TABLE IDENTIFIER IN . STAGE IDENTIFIER table_optional_stmt

    STAGE  shift, and go to state 147


State 122

  131 stage_parser: PARSER . '{' stage_parser_headers '}' ';'

    '{'  shift, and go to state 148


State 123

  130 stage_def: STAGE IDENTIFIER '{' stage_parser . stage_matcher stage_executor '}'

    MATCHER  shift, and go to state 149

    stage_matcher  go to state 150


State 124

   25 add: ADD MATCHER IN STAGE IDENTIFIER switch_entries .
  140 switch_entries: switch_entries . switch_entry

    TRUE       shift, and go to state 151
    FALSE      shift, and go to state 152
    DEFAULT    shift, and go to state 153
    VALUE_INT  shift, and go to state 154
    '*'        shift, and go to state 155

    $default  reduce using rule 25 (add)

    key_def       go to state 156
    switch_entry  go to state 157


State 125

   26 add: ADD EXECUTOR IN STAGE IDENTIFIER stage_executor_entries .
  149 stage_executor_entries: stage_executor_entries . stage_executor_entry

    NOACTION    shift, and go to state 158
    HIT         shift, and go to state 159
    MISS        shift, and go to state 160
    IDENTIFIER  shift, and go to state 161

    $default  reduce using rule 26 (add)

    stage_executor_entry       go to state 162
    stage_executor_entry_left  go to state 163


State 126

   14 rebuild: REBUILD DEFAULT_ACTION IDENTIFIER IN TABLE . IDENTIFIER IN STAGE IDENTIFIER

    IDENTIFIER  shift, and go to state 164


State 127

   15 rebuild: REBUILD EXPRESSION IN ACTION IDENTIFIER . IN STAGE IDENTIFIER expressions

    IN  shift, and go to state 165


State 128

   16 rebuild: REBUILD OPERATION IN STAGE IDENTIFIER . operations

    TRUE        shift, and go to state 166
    FALSE       shift, and go to state 167
    IDENTIFIER  shift, and go to state 168
    VALUE_INT   shift, and go to state 169
    '('         shift, and go to state 170

    $default  reduce using rule 136 (operations)

    member      go to state 171
    field       go to state 172
    lvalue      go to state 173
    operation   go to state 174
    operand     go to state 175
    operations  go to state 176


State 129

   17 rebuild: REBUILD ACTION_TO_STAGE IDENTIFIER IN STAGE . IDENTIFIER NEXT_STAGE IDENTIFIER

    IDENTIFIER  shift, and go to state 177


State 130

   33 type_def: BIT '<' VALUE_INT . '>'

    '>'  shift, and go to state 178


State 131

   38 struct_def: STRUCT HEADERS '{' field_defs '}' IDENTIFIER . ';'

    ';'  shift, and go to state 179


State 132

   37 struct_def: STRUCT IDENTIFIER '{' field_defs '}' IDENTIFIER . ';'

    ';'  shift, and go to state 180


State 133

   40 parser_def: PARSER IDENTIFIER '(' PACKET_IN PACKET ')' . '{' state_defs '}'

    '{'  shift, and go to state 181


State 134

   10 del: DEL PARSER IDENTIFIER IN . STAGE IDENTIFIER

    STAGE  shift, and go to state 182


State 135

    8 del: DEL ACTION IDENTIFIER IN . STAGE IDENTIFIER

    STAGE  shift, and go to state 183


State 136

    7 del: DEL TABLE IDENTIFIER IN . STAGE IDENTIFIER

    STAGE  shift, and go to state 184


State 137

    9 del: DEL ENTRIES IN TABLE . IDENTIFIER IN STAGE IDENTIFIER

    IDENTIFIER  shift, and go to state 185


State 138

   11 del: DEL MATCHER IN STAGE . IDENTIFIER key_def

    IDENTIFIER  shift, and go to state 186


State 139

  101 tables_def: TABLES '{' table_defs '}' .

    $default  reduce using rule 101 (tables_def)


State 140

  103 table_defs: table_defs table_def .

    $default  reduce using rule 103 (table_defs)


State 141

  127 pipeline: CONTROL IDENTIFIER '{' . stage_defs '}'

    $default  reduce using rule 128 (stage_defs)

    stage_defs  go to state 187


State 142

   70 action_def: ACTION NOACTION '(' ')' '{' . '}'

    '}'  shift, and go to state 188


State 143

   69 action_def: ACTION IDENTIFIER '(' parameters ')' . '{' expressions '}'

    '{'  shift, and go to state 189


State 144

   73 parameters: parameters ',' . field_def

    BIT         shift, and go to state 68
    IDENTIFIER  shift, and go to state 69

    field_def  go to state 190
    type_def   go to state 72


State 145

  105 table_key_def: KEY '=' . '{' key_entries '}'

    '{'  shift, and go to state 191


State 146

  104 table_def: TABLE IDENTIFIER '{' table_key_def table_optional_stmts . '}'
  113 table_optional_stmts: table_optional_stmts . table_optional_stmt

    SIZE            shift, and go to state 192
    DEFAULT_ACTION  shift, and go to state 193
    ENTRIES         shift, and go to state 194
    VALUE_WIDTH     shift, and go to state 195
    '}'             shift, and go to state 196

    table_optional_stmt  go to state 197


State 147

   23 add: ADD ENTRIES IN TABLE IDENTIFIER IN STAGE . IDENTIFIER table_optional_stmt

    IDENTIFIER  shift, and go to state 198


State 148

  131 stage_parser: PARSER '{' . stage_parser_headers '}' ';'

    $default  reduce using rule 132 (stage_parser_headers)

    stage_parser_headers  go to state 199


State 149

  135 stage_matcher: MATCHER . '{' SWITCH '(' operations ')' '{' switch_entries '}' '}' ';'

    '{'  shift, and go to state 200


State 150

  130 stage_def: STAGE IDENTIFIER '{' stage_parser stage_matcher . stage_executor '}'

    EXECUTOR  shift, and go to state 201

    stage_executor  go to state 202


State 151

   60 key_def: TRUE .

    $default  reduce using rule 60 (key_def)


State 152

   61 key_def: FALSE .

    $default  reduce using rule 61 (key_def)


State 153

   64 key_def: DEFAULT .

    $default  reduce using rule 64 (key_def)


State 154

   59 key_def: VALUE_INT .
   62        | VALUE_INT . ANDANDAND VALUE_INT
   63        | VALUE_INT . DIVDIVDIV VALUE_INT

    ANDANDAND  shift, and go to state 203
    DIVDIVDIV  shift, and go to state 204

    $default  reduce using rule 59 (key_def)


State 155

   65 key_def: '*' .

    $default  reduce using rule 65 (key_def)


State 156

  141 switch_entry: key_def . ':' switch_value ';'

    ':'  shift, and go to state 205


State 157

  140 switch_entries: switch_entries switch_entry .

    $default  reduce using rule 140 (switch_entries)


State 158

  154 stage_executor_entry_left: NOACTION .

    $default  reduce using rule 154 (stage_executor_entry_left)


State 159

  152 stage_executor_entry_left: HIT .

    $default  reduce using rule 152 (stage_executor_entry_left)


State 160

  153 stage_executor_entry_left: MISS .

    $default  reduce using rule 153 (stage_executor_entry_left)


State 161

  151 stage_executor_entry_left: IDENTIFIER .

    $default  reduce using rule 151 (stage_executor_entry_left)


State 162

  149 stage_executor_entries: stage_executor_entries stage_executor_entry .

    $default  reduce using rule 149 (stage_executor_entries)


State 163

  150 stage_executor_entry: stage_executor_entry_left . ':' stage_name ';'

    ':'  shift, and go to state 206


State 164

   14 rebuild: REBUILD DEFAULT_ACTION IDENTIFIER IN TABLE IDENTIFIER . IN STAGE IDENTIFIER

    IN  shift, and go to state 207


State 165

   15 rebuild: REBUILD EXPRESSION IN ACTION IDENTIFIER IN . STAGE IDENTIFIER expressions

    STAGE  shift, and go to state 208


State 166

   99 operand: TRUE .

    $default  reduce using rule 99 (operand)


State 167

  100 operand: FALSE .

    $default  reduce using rule 100 (operand)


State 168

   45 member: IDENTIFIER . '.' IDENTIFIER
   53 field: IDENTIFIER . '.' IDENTIFIER '.' IDENTIFIER
   54      | IDENTIFIER . '.' IDENTIFIER '.' IS_VALID '(' ')'
   98 operand: IDENTIFIER .

    '.'  shift, and go to state 209

    $default  reduce using rule 98 (operand)


State 169

   97 operand: VALUE_INT .

    $default  reduce using rule 97 (operand)


State 170

   80 operation: '(' . operation op operation ')'

    TRUE        shift, and go to state 166
    FALSE       shift, and go to state 167
    IDENTIFIER  shift, and go to state 168
    VALUE_INT   shift, and go to state 169
    '('         shift, and go to state 170

    member     go to state 171
    field      go to state 172
    lvalue     go to state 173
    operation  go to state 210
    operand    go to state 175


State 171

   77 lvalue: member .

    $default  reduce using rule 77 (lvalue)


State 172

   78 lvalue: field .

    $default  reduce using rule 78 (lvalue)


State 173

   96 operand: lvalue .

    $default  reduce using rule 96 (operand)


State 174

  137 operations: operation .

    $default  reduce using rule 137 (operations)


State 175

   79 operation: operand .

    $default  reduce using rule 79 (operation)


State 176

   16 rebuild: REBUILD OPERATION IN STAGE IDENTIFIER operations .
  138 operations: operations . ',' operation

    ','  shift, and go to state 211

    $default  reduce using rule 16 (rebuild)


State 177

   17 rebuild: REBUILD ACTION_TO_STAGE IDENTIFIER IN STAGE IDENTIFIER . NEXT_STAGE IDENTIFIER

    NEXT_STAGE  shift, and go to state 212


State 178

   33 type_def: BIT '<' VALUE_INT '>' .

    $default  reduce using rule 33 (type_def)


State 179

   38 struct_def: STRUCT HEADERS '{' field_defs '}' IDENTIFIER ';' .

    $default  reduce using rule 38 (struct_def)


State 180

   37 struct_def: STRUCT IDENTIFIER '{' field_defs '}' IDENTIFIER ';' .

    $default  reduce using rule 37 (struct_def)


State 181

   40 parser_def: PARSER IDENTIFIER '(' PACKET_IN PACKET ')' '{' . state_defs '}'

    $default  reduce using rule 41 (state_defs)

    state_defs  go to state 213


State 182

   10 del: DEL PARSER IDENTIFIER IN STAGE . IDENTIFIER

    IDENTIFIER  shift, and go to state 214


State 183

    8 del: DEL ACTION IDENTIFIER IN STAGE . IDENTIFIER

    IDENTIFIER  shift, and go to state 215


State 184

    7 del: DEL TABLE IDENTIFIER IN STAGE . IDENTIFIER

    IDENTIFIER  shift, and go to state 216


State 185

    9 del: DEL ENTRIES IN TABLE IDENTIFIER . IN STAGE IDENTIFIER

    IN  shift, and go to state 217


State 186

   11 del: DEL MATCHER IN STAGE IDENTIFIER . key_def

    TRUE       shift, and go to state 151
    FALSE      shift, and go to state 152
    DEFAULT    shift, and go to state 153
    VALUE_INT  shift, and go to state 154
    '*'        shift, and go to state 155

    key_def  go to state 218


State 187

  127 pipeline: CONTROL IDENTIFIER '{' stage_defs . '}'
  129 stage_defs: stage_defs . stage_def

    STAGE  shift, and go to state 39
    '}'    shift, and go to state 219

    stage_def  go to state 220


State 188

   70 action_def: ACTION NOACTION '(' ')' '{' '}' .

    $default  reduce using rule 70 (action_def)


State 189

   69 action_def: ACTION IDENTIFIER '(' parameters ')' '{' . expressions '}'

    $default  reduce using rule 74 (expressions)

    expressions  go to state 221


State 190

   73 parameters: parameters ',' field_def .

    $default  reduce using rule 73 (parameters)


State 191

  105 table_key_def: KEY '=' '{' . key_entries '}'

    $default  reduce using rule 106 (key_entries)

    key_entries  go to state 222


State 192

  114 table_optional_stmt: SIZE . '=' VALUE_INT ';'

    '='  shift, and go to state 223


State 193

  116 table_optional_stmt: DEFAULT_ACTION . '=' IDENTIFIER ';'
  117                    | DEFAULT_ACTION . '=' NOACTION ';'

    '='  shift, and go to state 224


State 194

  115 table_optional_stmt: ENTRIES . '=' '{' match_entries '}'

    '='  shift, and go to state 225


State 195

  118 table_optional_stmt: VALUE_WIDTH . '=' VALUE_INT ';'

    '='  shift, and go to state 226


State 196

  104 table_def: TABLE IDENTIFIER '{' table_key_def table_optional_stmts '}' .

    $default  reduce using rule 104 (table_def)


State 197

  113 table_optional_stmts: table_optional_stmts table_optional_stmt .

    $default  reduce using rule 113 (table_optional_stmts)


State 198

   23 add: ADD ENTRIES IN TABLE IDENTIFIER IN STAGE IDENTIFIER . table_optional_stmt

    SIZE            shift, and go to state 192
    DEFAULT_ACTION  shift, and go to state 193
    ENTRIES         shift, and go to state 194
    VALUE_WIDTH     shift, and go to state 195

    table_optional_stmt  go to state 227


State 199

  131 stage_parser: PARSER '{' stage_parser_headers . '}' ';'
  133 stage_parser_headers: stage_parser_headers . stage_parser_header

    IDENTIFIER  shift, and go to state 228
    '}'         shift, and go to state 229

    stage_parser_header  go to state 230


State 200

  135 stage_matcher: MATCHER '{' . SWITCH '(' operations ')' '{' switch_entries '}' '}' ';'

    SWITCH  shift, and go to state 231


State 201

  147 stage_executor: EXECUTOR . '{' stage_executor_entries '}' ';'

    '{'  shift, and go to state 232


State 202

  130 stage_def: STAGE IDENTIFIER '{' stage_parser stage_matcher stage_executor . '}'

    '}'  shift, and go to state 233


State 203

   62 key_def: VALUE_INT ANDANDAND . VALUE_INT

    VALUE_INT  shift, and go to state 234


State 204

   63 key_def: VALUE_INT DIVDIVDIV . VALUE_INT

    VALUE_INT  shift, and go to state 235


State 205

  141 switch_entry: key_def ':' . switch_value ';'

    ACTION  shift, and go to state 236
    TABLE   shift, and go to state 237
    STAGE   shift, and go to state 238
    NONE    shift, and go to state 239

    switch_value  go to state 240


State 206

  150 stage_executor_entry: stage_executor_entry_left ':' . stage_name ';'

    NONE        shift, and go to state 241
    IDENTIFIER  shift, and go to state 242

    stage_name  go to state 243


State 207

   14 rebuild: REBUILD DEFAULT_ACTION IDENTIFIER IN TABLE IDENTIFIER IN . STAGE IDENTIFIER

    STAGE  shift, and go to state 244


State 208

   15 rebuild: REBUILD EXPRESSION IN ACTION IDENTIFIER IN STAGE . IDENTIFIER expressions

    IDENTIFIER  shift, and go to state 245


State 209

   45 member: IDENTIFIER '.' . IDENTIFIER
   53 field: IDENTIFIER '.' . IDENTIFIER '.' IDENTIFIER
   54      | IDENTIFIER '.' . IDENTIFIER '.' IS_VALID '(' ')'

    IDENTIFIER  shift, and go to state 246


State 210

   80 operation: '(' operation . op operation ')'

    EQU  shift, and go to state 247
    NEQ  shift, and go to state 248
    LEQ  shift, and go to state 249
    GEQ  shift, and go to state 250
    '<'  shift, and go to state 251
    '>'  shift, and go to state 252
    '*'  shift, and go to state 253
    '+'  shift, and go to state 254
    '-'  shift, and go to state 255
    '/'  shift, and go to state 256
    '&'  shift, and go to state 257
    '|'  shift, and go to state 258
    '^'  shift, and go to state 259
    '~'  shift, and go to state 260
    '!'  shift, and go to state 261

    op  go to state 262


State 211

  138 operations: operations ',' . operation

    TRUE        shift, and go to state 166
    FALSE       shift, and go to state 167
    IDENTIFIER  shift, and go to state 168
    VALUE_INT   shift, and go to state 169
    '('         shift, and go to state 170

    member     go to state 171
    field      go to state 172
    lvalue     go to state 173
    operation  go to state 263
    operand    go to state 175


State 212

   17 rebuild: REBUILD ACTION_TO_STAGE IDENTIFIER IN STAGE IDENTIFIER NEXT_STAGE . IDENTIFIER

    IDENTIFIER  shift, and go to state 264


State 213

   40 parser_def: PARSER IDENTIFIER '(' PACKET_IN PACKET ')' '{' state_defs . '}'
   42 state_defs: state_defs . state_def

    STATE  shift, and go to state 265
    '}'    shift, and go to state 266

    state_def  go to state 267


State 214

   10 del: DEL PARSER IDENTIFIER IN STAGE IDENTIFIER .

    $default  reduce using rule 10 (del)


State 215

    8 del: DEL ACTION IDENTIFIER IN STAGE IDENTIFIER .

    $default  reduce using rule 8 (del)


State 216

    7 del: DEL TABLE IDENTIFIER IN STAGE IDENTIFIER .

    $default  reduce using rule 7 (del)


State 217

    9 del: DEL ENTRIES IN TABLE IDENTIFIER IN . STAGE IDENTIFIER

    STAGE  shift, and go to state 268


State 218

   11 del: DEL MATCHER IN STAGE IDENTIFIER key_def .

    $default  reduce using rule 11 (del)


State 219

  127 pipeline: CONTROL IDENTIFIER '{' stage_defs '}' .

    $default  reduce using rule 127 (pipeline)


State 220

  129 stage_defs: stage_defs stage_def .

    $default  reduce using rule 129 (stage_defs)


State 221

   69 action_def: ACTION IDENTIFIER '(' parameters ')' '{' expressions . '}'
   75 expressions: expressions . expression

    IDENTIFIER  shift, and go to state 269
    '}'         shift, and go to state 270

    member      go to state 171
    field       go to state 172
    expression  go to state 271
    lvalue      go to state 272


State 222

  105 table_key_def: KEY '=' '{' key_entries . '}'
  107 key_entries: key_entries . key_entry

    IDENTIFIER  shift, and go to state 269
    '}'         shift, and go to state 273

    member     go to state 171
    field      go to state 172
    lvalue     go to state 274
    key_entry  go to state 275


State 223

  114 table_optional_stmt: SIZE '=' . VALUE_INT ';'

    VALUE_INT  shift, and go to state 276


State 224

  116 table_optional_stmt: DEFAULT_ACTION '=' . IDENTIFIER ';'
  117                    | DEFAULT_ACTION '=' . NOACTION ';'

    NOACTION    shift, and go to state 277
    IDENTIFIER  shift, and go to state 278


State 225

  115 table_optional_stmt: ENTRIES '=' . '{' match_entries '}'

    '{'  shift, and go to state 279


State 226

  118 table_optional_stmt: VALUE_WIDTH '=' . VALUE_INT ';'

    VALUE_INT  shift, and go to state 280


State 227

   23 add: ADD ENTRIES IN TABLE IDENTIFIER IN STAGE IDENTIFIER table_optional_stmt .

    $default  reduce using rule 23 (add)


State 228

  134 stage_parser_header: IDENTIFIER . ';'

    ';'  shift, and go to state 281


State 229

  131 stage_parser: PARSER '{' stage_parser_headers '}' . ';'

    ';'  shift, and go to state 282


State 230

  133 stage_parser_headers: stage_parser_headers stage_parser_header .

    $default  reduce using rule 133 (stage_parser_headers)


State 231

  135 stage_matcher: MATCHER '{' SWITCH . '(' operations ')' '{' switch_entries '}' '}' ';'

    '('  shift, and go to state 283


State 232

  147 stage_executor: EXECUTOR '{' . stage_executor_entries '}' ';'

    $default  reduce using rule 148 (stage_executor_entries)

    stage_executor_entries  go to state 284


State 233

  130 stage_def: STAGE IDENTIFIER '{' stage_parser stage_matcher stage_executor '}' .

    $default  reduce using rule 130 (stage_def)


State 234

   62 key_def: VALUE_INT ANDANDAND VALUE_INT .

    $default  reduce using rule 62 (key_def)


State 235

   63 key_def: VALUE_INT DIVDIVDIV VALUE_INT .

    $default  reduce using rule 63 (key_def)


State 236

  144 switch_value: ACTION . '(' IDENTIFIER ')'
  145             | ACTION . '(' NOACTION ')'

    '('  shift, and go to state 285


State 237

  142 switch_value: TABLE . '(' IDENTIFIER ')'

    '('  shift, and go to state 286


State 238

  143 switch_value: STAGE . '(' IDENTIFIER ')'

    '('  shift, and go to state 287


State 239

  146 switch_value: NONE .

    $default  reduce using rule 146 (switch_value)


State 240

  141 switch_entry: key_def ':' switch_value . ';'

    ';'  shift, and go to state 288


State 241

  156 stage_name: NONE .

    $default  reduce using rule 156 (stage_name)


State 242

  155 stage_name: IDENTIFIER .

    $default  reduce using rule 155 (stage_name)


State 243

  150 stage_executor_entry: stage_executor_entry_left ':' stage_name . ';'

    ';'  shift, and go to state 289


State 244

   14 rebuild: REBUILD DEFAULT_ACTION IDENTIFIER IN TABLE IDENTIFIER IN STAGE . IDENTIFIER

    IDENTIFIER  shift, and go to state 290


State 245

   15 rebuild: REBUILD EXPRESSION IN ACTION IDENTIFIER IN STAGE IDENTIFIER . expressions

    $default  reduce using rule 74 (expressions)

    expressions  go to state 291


State 246

   45 member: IDENTIFIER '.' IDENTIFIER .
   53 field: IDENTIFIER '.' IDENTIFIER . '.' IDENTIFIER
   54      | IDENTIFIER '.' IDENTIFIER . '.' IS_VALID '(' ')'

    '.'  shift, and go to state 292

    $default  reduce using rule 45 (member)


State 247

   90 op: EQU .

    $default  reduce using rule 90 (op)


State 248

   91 op: NEQ .

    $default  reduce using rule 91 (op)


State 249

   94 op: LEQ .

    $default  reduce using rule 94 (op)


State 250

   95 op: GEQ .

    $default  reduce using rule 95 (op)


State 251

   92 op: '<' .

    $default  reduce using rule 92 (op)


State 252

   93 op: '>' .

    $default  reduce using rule 93 (op)


State 253

   83 op: '*' .

    $default  reduce using rule 83 (op)


State 254

   81 op: '+' .

    $default  reduce using rule 81 (op)


State 255

   82 op: '-' .

    $default  reduce using rule 82 (op)


State 256

   84 op: '/' .

    $default  reduce using rule 84 (op)


State 257

   85 op: '&' .

    $default  reduce using rule 85 (op)


State 258

   86 op: '|' .

    $default  reduce using rule 86 (op)


State 259

   87 op: '^' .

    $default  reduce using rule 87 (op)


State 260

   88 op: '~' .

    $default  reduce using rule 88 (op)


State 261

   89 op: '!' .

    $default  reduce using rule 89 (op)


State 262

   80 operation: '(' operation op . operation ')'

    TRUE        shift, and go to state 166
    FALSE       shift, and go to state 167
    IDENTIFIER  shift, and go to state 168
    VALUE_INT   shift, and go to state 169
    '('         shift, and go to state 170

    member     go to state 171
    field      go to state 172
    lvalue     go to state 173
    operation  go to state 293
    operand    go to state 175


State 263

  138 operations: operations ',' operation .

    $default  reduce using rule 138 (operations)


State 264

   17 rebuild: REBUILD ACTION_TO_STAGE IDENTIFIER IN STAGE IDENTIFIER NEXT_STAGE IDENTIFIER .

    $default  reduce using rule 17 (rebuild)


State 265

   43 state_def: STATE . IDENTIFIER '{' extract_stmt transition_stmt '}'

    IDENTIFIER  shift, and go to state 294


State 266

   40 parser_def: PARSER IDENTIFIER '(' PACKET_IN PACKET ')' '{' state_defs '}' .

    $default  reduce using rule 40 (parser_def)


State 267

   42 state_defs: state_defs state_def .

    $default  reduce using rule 42 (state_defs)


State 268

    9 del: DEL ENTRIES IN TABLE IDENTIFIER IN STAGE . IDENTIFIER

    IDENTIFIER  shift, and go to state 295


State 269

   45 member: IDENTIFIER . '.' IDENTIFIER
   53 field: IDENTIFIER . '.' IDENTIFIER '.' IDENTIFIER
   54      | IDENTIFIER . '.' IDENTIFIER '.' IS_VALID '(' ')'

    '.'  shift, and go to state 209


State 270

   69 action_def: ACTION IDENTIFIER '(' parameters ')' '{' expressions '}' .

    $default  reduce using rule 69 (action_def)


State 271

   75 expressions: expressions expression .

    $default  reduce using rule 75 (expressions)


State 272

   76 expression: lvalue . '=' operation ';'

    '='  shift, and go to state 296


State 273

  105 table_key_def: KEY '=' '{' key_entries '}' .

    $default  reduce using rule 105 (table_key_def)


State 274

  108 key_entry: lvalue . ':' match_type ';'

    ':'  shift, and go to state 297


State 275

  107 key_entries: key_entries key_entry .

    $default  reduce using rule 107 (key_entries)


State 276

  114 table_optional_stmt: SIZE '=' VALUE_INT . ';'

    ';'  shift, and go to state 298


State 277

  117 table_optional_stmt: DEFAULT_ACTION '=' NOACTION . ';'

    ';'  shift, and go to state 299


State 278

  116 table_optional_stmt: DEFAULT_ACTION '=' IDENTIFIER . ';'

    ';'  shift, and go to state 300


State 279

  115 table_optional_stmt: ENTRIES '=' '{' . match_entries '}'

    $default  reduce using rule 119 (match_entries)

    match_entries  go to state 301


State 280

  118 table_optional_stmt: VALUE_WIDTH '=' VALUE_INT . ';'

    ';'  shift, and go to state 302


State 281

  134 stage_parser_header: IDENTIFIER ';' .

    $default  reduce using rule 134 (stage_parser_header)


State 282

  131 stage_parser: PARSER '{' stage_parser_headers '}' ';' .

    $default  reduce using rule 131 (stage_parser)


State 283

  135 stage_matcher: MATCHER '{' SWITCH '(' . operations ')' '{' switch_entries '}' '}' ';'

    TRUE        shift, and go to state 166
    FALSE       shift, and go to state 167
    IDENTIFIER  shift, and go to state 168
    VALUE_INT   shift, and go to state 169
    '('         shift, and go to state 170

    $default  reduce using rule 136 (operations)

    member      go to state 171
    field       go to state 172
    lvalue      go to state 173
    operation   go to state 174
    operand     go to state 175
    operations  go to state 303


State 284

  147 stage_executor: EXECUTOR '{' stage_executor_entries . '}' ';'
  149 stage_executor_entries: stage_executor_entries . stage_executor_entry

    NOACTION    shift, and go to state 158
    HIT         shift, and go to state 159
    MISS        shift, and go to state 160
    IDENTIFIER  shift, and go to state 161
    '}'         shift, and go to state 304

    stage_executor_entry       go to state 162
    stage_executor_entry_left  go to state 163


State 285

  144 switch_value: ACTION '(' . IDENTIFIER ')'
  145             | ACTION '(' . NOACTION ')'

    NOACTION    shift, and go to state 305
    IDENTIFIER  shift, and go to state 306


State 286

  142 switch_value: TABLE '(' . IDENTIFIER ')'

    IDENTIFIER  shift, and go to state 307


State 287

  143 switch_value: STAGE '(' . IDENTIFIER ')'

    IDENTIFIER  shift, and go to state 308


State 288

  141 switch_entry: key_def ':' switch_value ';' .

    $default  reduce using rule 141 (switch_entry)


State 289

  150 stage_executor_entry: stage_executor_entry_left ':' stage_name ';' .

    $default  reduce using rule 150 (stage_executor_entry)


State 290

   14 rebuild: REBUILD DEFAULT_ACTION IDENTIFIER IN TABLE IDENTIFIER IN STAGE IDENTIFIER .

    $default  reduce using rule 14 (rebuild)


State 291

   15 rebuild: REBUILD EXPRESSION IN ACTION IDENTIFIER IN STAGE IDENTIFIER expressions .
   75 expressions: expressions . expression

    IDENTIFIER  shift, and go to state 269

    $default  reduce using rule 15 (rebuild)

    member      go to state 171
    field       go to state 172
    expression  go to state 271
    lvalue      go to state 272


State 292

   53 field: IDENTIFIER '.' IDENTIFIER '.' . IDENTIFIER
   54      | IDENTIFIER '.' IDENTIFIER '.' . IS_VALID '(' ')'

    IS_VALID    shift, and go to state 309
    IDENTIFIER  shift, and go to state 310


State 293

   80 operation: '(' operation op operation . ')'

    ')'  shift, and go to state 311


State 294

   43 state_def: STATE IDENTIFIER . '{' extract_stmt transition_stmt '}'

    '{'  shift, and go to state 312


State 295

    9 del: DEL ENTRIES IN TABLE IDENTIFIER IN STAGE IDENTIFIER .

    $default  reduce using rule 9 (del)


State 296

   76 expression: lvalue '=' . operation ';'

    TRUE        shift, and go to state 166
    FALSE       shift, and go to state 167
    IDENTIFIER  shift, and go to state 168
    VALUE_INT   shift, and go to state 169
    '('         shift, and go to state 170

    member     go to state 171
    field      go to state 172
    lvalue     go to state 173
    operation  go to state 313
    operand    go to state 175


State 297

  108 key_entry: lvalue ':' . match_type ';'

    EXACT    shift, and go to state 314
    TERNARY  shift, and go to state 315
    LPM      shift, and go to state 316

    match_type  go to state 317


State 298

  114 table_optional_stmt: SIZE '=' VALUE_INT ';' .

    $default  reduce using rule 114 (table_optional_stmt)


State 299

  117 table_optional_stmt: DEFAULT_ACTION '=' NOACTION ';' .

    $default  reduce using rule 117 (table_optional_stmt)


State 300

  116 table_optional_stmt: DEFAULT_ACTION '=' IDENTIFIER ';' .

    $default  reduce using rule 116 (table_optional_stmt)


State 301

  115 table_optional_stmt: ENTRIES '=' '{' match_entries . '}'
  120 match_entries: match_entries . match_entry

    '}'  shift, and go to state 318
    '('  shift, and go to state 319

    match_entry  go to state 320
    match_key    go to state 321


State 302

  118 table_optional_stmt: VALUE_WIDTH '=' VALUE_INT ';' .

    $default  reduce using rule 118 (table_optional_stmt)


State 303

  135 stage_matcher: MATCHER '{' SWITCH '(' operations . ')' '{' switch_entries '}' '}' ';'
  138 operations: operations . ',' operation

    ')'  shift, and go to state 322
    ','  shift, and go to state 211


State 304

  147 stage_executor: EXECUTOR '{' stage_executor_entries '}' . ';'

    ';'  shift, and go to state 323


State 305

  145 switch_value: ACTION '(' NOACTION . ')'

    ')'  shift, and go to state 324


State 306

  144 switch_value: ACTION '(' IDENTIFIER . ')'

    ')'  shift, and go to state 325


State 307

  142 switch_value: TABLE '(' IDENTIFIER . ')'

    ')'  shift, and go to state 326


State 308

  143 switch_value: STAGE '(' IDENTIFIER . ')'

    ')'  shift, and go to state 327


State 309

   54 field: IDENTIFIER '.' IDENTIFIER '.' IS_VALID . '(' ')'

    '('  shift, and go to state 328


State 310

   53 field: IDENTIFIER '.' IDENTIFIER '.' IDENTIFIER .

    $default  reduce using rule 53 (field)


State 311

   80 operation: '(' operation op operation ')' .

    $default  reduce using rule 80 (operation)


State 312

   43 state_def: STATE IDENTIFIER '{' . extract_stmt transition_stmt '}'

    PACKET  shift, and go to state 329

    extract_stmt  go to state 330


State 313

   76 expression: lvalue '=' operation . ';'

    ';'  shift, and go to state 331


State 314

  109 match_type: EXACT .

    $default  reduce using rule 109 (match_type)


State 315

  110 match_type: TERNARY .

    $default  reduce using rule 110 (match_type)


State 316

  111 match_type: LPM .

    $default  reduce using rule 111 (match_type)


State 317

  108 key_entry: lvalue ':' match_type . ';'

    ';'  shift, and go to state 332


State 318

  115 table_optional_stmt: ENTRIES '=' '{' match_entries '}' .

    $default  reduce using rule 115 (table_optional_stmt)


State 319

  123 match_key: '(' . key_defs ')'

    TRUE       shift, and go to state 151
    FALSE      shift, and go to state 152
    DEFAULT    shift, and go to state 153
    VALUE_INT  shift, and go to state 154
    '*'        shift, and go to state 155

    $default  reduce using rule 124 (key_defs)

    key_def   go to state 333
    key_defs  go to state 334


State 320

  120 match_entries: match_entries match_entry .

    $default  reduce using rule 120 (match_entries)


State 321

  121 match_entry: match_key . ':' IDENTIFIER ';'
  122            | match_key . ':' NOACTION ';'

    ':'  shift, and go to state 335


State 322

  135 stage_matcher: MATCHER '{' SWITCH '(' operations ')' . '{' switch_entries '}' '}' ';'

    '{'  shift, and go to state 336


State 323

  147 stage_executor: EXECUTOR '{' stage_executor_entries '}' ';' .

    $default  reduce using rule 147 (stage_executor)


State 324

  145 switch_value: ACTION '(' NOACTION ')' .

    $default  reduce using rule 145 (switch_value)


State 325

  144 switch_value: ACTION '(' IDENTIFIER ')' .

    $default  reduce using rule 144 (switch_value)


State 326

  142 switch_value: TABLE '(' IDENTIFIER ')' .

    $default  reduce using rule 142 (switch_value)


State 327

  143 switch_value: STAGE '(' IDENTIFIER ')' .

    $default  reduce using rule 143 (switch_value)


State 328

   54 field: IDENTIFIER '.' IDENTIFIER '.' IS_VALID '(' . ')'

    ')'  shift, and go to state 337


State 329

   44 extract_stmt: PACKET . '.' EXTRACT '(' member ')' ';'

    '.'  shift, and go to state 338


State 330

   43 state_def: STATE IDENTIFIER '{' extract_stmt . transition_stmt '}'

    TRANSITION  shift, and go to state 339

    transition_stmt  go to state 340


State 331

   76 expression: lvalue '=' operation ';' .

    $default  reduce using rule 76 (expression)


State 332

  108 key_entry: lvalue ':' match_type ';' .

    $default  reduce using rule 108 (key_entry)


State 333

  125 key_defs: key_def .

    $default  reduce using rule 125 (key_defs)


State 334

  123 match_key: '(' key_defs . ')'
  126 key_defs: key_defs . ',' key_def

    ')'  shift, and go to state 341
    ','  shift, and go to state 342


State 335

  121 match_entry: match_key ':' . IDENTIFIER ';'
  122            | match_key ':' . NOACTION ';'

    NOACTION    shift, and go to state 343
    IDENTIFIER  shift, and go to state 344


State 336

  135 stage_matcher: MATCHER '{' SWITCH '(' operations ')' '{' . switch_entries '}' '}' ';'

    $default  reduce using rule 139 (switch_entries)

    switch_entries  go to state 345


State 337

   54 field: IDENTIFIER '.' IDENTIFIER '.' IS_VALID '(' ')' .

    $default  reduce using rule 54 (field)


State 338

   44 extract_stmt: PACKET '.' . EXTRACT '(' member ')' ';'

    EXTRACT  shift, and go to state 346


State 339

   46 transition_stmt: TRANSITION . SELECT '(' fields ')' '{' transition_entries '}'
   47                | TRANSITION . direct_entry ';'

    ACCEPT      shift, and go to state 347
    SELECT      shift, and go to state 348
    IDENTIFIER  shift, and go to state 349

    direct_entry  go to state 350


State 340

   43 state_def: STATE IDENTIFIER '{' extract_stmt transition_stmt . '}'

    '}'  shift, and go to state 351


State 341

  123 match_key: '(' key_defs ')' .

    $default  reduce using rule 123 (match_key)


State 342

  126 key_defs: key_defs ',' . key_def

    TRUE       shift, and go to state 151
    FALSE      shift, and go to state 152
    DEFAULT    shift, and go to state 153
    VALUE_INT  shift, and go to state 154
    '*'        shift, and go to state 155

    key_def  go to state 352


State 343

  122 match_entry: match_key ':' NOACTION . ';'

    ';'  shift, and go to state 353


State 344

  121 match_entry: match_key ':' IDENTIFIER . ';'

    ';'  shift, and go to state 354


State 345

  135 stage_matcher: MATCHER '{' SWITCH '(' operations ')' '{' switch_entries . '}' '}' ';'
  140 switch_entries: switch_entries . switch_entry

    TRUE       shift, and go to state 151
    FALSE      shift, and go to state 152
    DEFAULT    shift, and go to state 153
    VALUE_INT  shift, and go to state 154
    '}'        shift, and go to state 355
    '*'        shift, and go to state 155

    key_def       go to state 156
    switch_entry  go to state 157


State 346

   44 extract_stmt: PACKET '.' EXTRACT . '(' member ')' ';'

    '('  shift, and go to state 356


State 347

   52 direct_entry: ACCEPT .

    $default  reduce using rule 52 (direct_entry)


State 348

   46 transition_stmt: TRANSITION SELECT . '(' fields ')' '{' transition_entries '}'

    '('  shift, and go to state 357


State 349

   51 direct_entry: IDENTIFIER .

    $default  reduce using rule 51 (direct_entry)


State 350

   47 transition_stmt: TRANSITION direct_entry . ';'

    ';'  shift, and go to state 358


State 351

   43 state_def: STATE IDENTIFIER '{' extract_stmt transition_stmt '}' .

    $default  reduce using rule 43 (state_def)


State 352

  126 key_defs: key_defs ',' key_def .

    $default  reduce using rule 126 (key_defs)


State 353

  122 match_entry: match_key ':' NOACTION ';' .

    $default  reduce using rule 122 (match_entry)


State 354

  121 match_entry: match_key ':' IDENTIFIER ';' .

    $default  reduce using rule 121 (match_entry)


State 355

  135 stage_matcher: MATCHER '{' SWITCH '(' operations ')' '{' switch_entries '}' . '}' ';'

    '}'  shift, and go to state 359


State 356

   44 extract_stmt: PACKET '.' EXTRACT '(' . member ')' ';'

    IDENTIFIER  shift, and go to state 360

    member  go to state 361


State 357

   46 transition_stmt: TRANSITION SELECT '(' . fields ')' '{' transition_entries '}'

    IDENTIFIER  shift, and go to state 362

    $default  reduce using rule 48 (fields)

    fields  go to state 363
    field   go to state 364


State 358

   47 transition_stmt: TRANSITION direct_entry ';' .

    $default  reduce using rule 47 (transition_stmt)


State 359

  135 stage_matcher: MATCHER '{' SWITCH '(' operations ')' '{' switch_entries '}' '}' . ';'

    ';'  shift, and go to state 365


State 360

   45 member: IDENTIFIER . '.' IDENTIFIER

    '.'  shift, and go to state 366


State 361

   44 extract_stmt: PACKET '.' EXTRACT '(' member . ')' ';'

    ')'  shift, and go to state 367


State 362

   53 field: IDENTIFIER . '.' IDENTIFIER '.' IDENTIFIER
   54      | IDENTIFIER . '.' IDENTIFIER '.' IS_VALID '(' ')'

    '.'  shift, and go to state 368


State 363

   46 transition_stmt: TRANSITION SELECT '(' fields . ')' '{' transition_entries '}'
   50 fields: fields . ',' field

    ')'  shift, and go to state 369
    ','  shift, and go to state 370


State 364

   49 fields: field .

    $default  reduce using rule 49 (fields)


State 365

  135 stage_matcher: MATCHER '{' SWITCH '(' operations ')' '{' switch_entries '}' '}' ';' .

    $default  reduce using rule 135 (stage_matcher)


State 366

   45 member: IDENTIFIER '.' . IDENTIFIER

    IDENTIFIER  shift, and go to state 371


State 367

   44 extract_stmt: PACKET '.' EXTRACT '(' member ')' . ';'

    ';'  shift, and go to state 372


State 368

   53 field: IDENTIFIER '.' . IDENTIFIER '.' IDENTIFIER
   54      | IDENTIFIER '.' . IDENTIFIER '.' IS_VALID '(' ')'

    IDENTIFIER  shift, and go to state 373


State 369

   46 transition_stmt: TRANSITION SELECT '(' fields ')' . '{' transition_entries '}'

    '{'  shift, and go to state 374


State 370

   50 fields: fields ',' . field

    IDENTIFIER  shift, and go to state 362

    field  go to state 375


State 371

   45 member: IDENTIFIER '.' IDENTIFIER .

    $default  reduce using rule 45 (member)


State 372

   44 extract_stmt: PACKET '.' EXTRACT '(' member ')' ';' .

    $default  reduce using rule 44 (extract_stmt)


State 373

   53 field: IDENTIFIER '.' IDENTIFIER . '.' IDENTIFIER
   54      | IDENTIFIER '.' IDENTIFIER . '.' IS_VALID '(' ')'

    '.'  shift, and go to state 292


State 374

   46 transition_stmt: TRANSITION SELECT '(' fields ')' '{' . transition_entries '}'

    $default  reduce using rule 55 (transition_entries)

    transition_entries  go to state 376


State 375

   50 fields: fields ',' field .

    $default  reduce using rule 50 (fields)


State 376

   46 transition_stmt: TRANSITION SELECT '(' fields ')' '{' transition_entries . '}'
   56 transition_entries: transition_entries . transition_entry

    TRUE       shift, and go to state 151
    FALSE      shift, and go to state 152
    DEFAULT    shift, and go to state 153
    VALUE_INT  shift, and go to state 154
    '}'        shift, and go to state 377
    '*'        shift, and go to state 155

    transition_entry  go to state 378
    key_def           go to state 379


State 377

   46 transition_stmt: TRANSITION SELECT '(' fields ')' '{' transition_entries '}' .

    $default  reduce using rule 46 (transition_stmt)


State 378

   56 transition_entries: transition_entries transition_entry .

    $default  reduce using rule 56 (transition_entries)


State 379

   57 transition_entry: key_def . ':' IDENTIFIER ';'
   58                 | key_def . ':' ACCEPT ';'

    ':'  shift, and go to state 380


State 380

   57 transition_entry: key_def ':' . IDENTIFIER ';'
   58                 | key_def ':' . ACCEPT ';'

    ACCEPT      shift, and go to state 381
    IDENTIFIER  shift, and go to state 382


State 381

   58 transition_entry: key_def ':' ACCEPT . ';'

    ';'  shift, and go to state 383


State 382

   57 transition_entry: key_def ':' IDENTIFIER . ';'

    ';'  shift, and go to state 384


State 383

   58 transition_entry: key_def ':' ACCEPT ';' .

    $default  reduce using rule 58 (transition_entry)


State 384

   57 transition_entry: key_def ':' IDENTIFIER ';' .

    $default  reduce using rule 57 (transition_entry)
